global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
	ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
	ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
	ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
	timeout connect 5000
	timeout client  50000
	timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

frontend internalapps
  bind {{ mesh_lb_internal_ip }}:80
  bind {{ mesh_lb_internal_ip }}:443 ssl crt /etc/haproxy/ssl_internal/

  # Redirect http to https
  http-request redirect scheme https unless { ssl_fc }

  # Capture the first 32 chars of the hostname for logs
  http-request capture req.hdr(Host) len 32

  # Send X-Forwarded headers
  http-request add-header X-Forwarded-Proto "https"
  http-request add-header X-Forwarded-Port "443"
  http-request set-header X-Forwarded-For %[src]

  # Remove the x-powered-by response header, reveals info
  http-response del-header x-powered-by

  # Override the server response header, reveal less info
  http-response set-header server guess

  # Airflow Backend
  acl app_airflow hdr(host) -i airflow.mesh.nycmesh.net
  acl app_devairflow hdr(host) -i devairflow.mesh.nycmesh.net
  use_backend be_airflow if app_airflow OR app_devairflow

  acl app_jenkins hdr(host) -i jenkins.mesh.nycmesh.net
  use_backend be_jenkins if app_jenkins

  # By default, pass reauests to node port for building
  default_backend be_building

frontend meshdb
{% for external_ip in EXTERNAL_LISTEN_IPS.split(';') %}
  bind {{ external_ip }}:80
  bind {{ external_ip }}:443 ssl crt /etc/haproxy/ssl/
{% endfor %}

  # By default, pass reauests to k3s
  default_backend k8s

  # Capture the first 32 chars of the hostname for logs
  http-request capture req.hdr(Host) len 32

  # Certbot HTTP challenge
  acl app_letsencrypt path_beg /.well-known/acme-challenge/
  use_backend be_letsencrypt if app_letsencrypt

  # Stats uses a different backend
  acl app_stats hdr(host) -i stats.nycmesh.net
  use_backend be_grafana if app_stats

  # Mastodon to unique backend
  acl app_mastodon hdr(host) -i mastodon.nycmesh.net
  use_backend be_mastodon if app_mastodon
  http-request add-header X-Forwarded-Proto "https" if app_mastodon
  http-request add-header X-Forwarded-Port "443" if app_mastodon
  http-request set-header X-Forwarded-For %[src] if app_mastodon
  http-request set-header host mastodon.nycmesh.net if app_mastodon
  # Redirect other Mastodon domains to main domain
  acl is_mastodon_mesh hdr(host) -i mastodon.mesh.nycmesh.net social.nycmesh.net mastadon.nycmesh.net
  http-request redirect code 302 location https://mastodon.nycmesh.net%[capture.req.uri] if is_mastodon_mesh
  
  # GSG Displays Backend
  acl app_gsg-displays hdr(host) -i gsg-displays.nycmesh.net
  use_backend be_gsg-displays if app_gsg-displays

  # Redirect wiki.mesh.nycmesh.net to wiki.nycmesh.net
  acl is_wiki_mesh hdr(host) -i wiki.mesh.nycmesh.net
  http-request redirect code 302 location https://wiki.nycmesh.net%[capture.req.uri] if is_wiki_mesh

  # Remove the x-powered-by response header, reveals info
  http-response del-header x-powered-by

  # Override the server response header, reveal less info
  http-response set-header server guess

  # Redirect http to https
  http-request redirect scheme https unless { ssl_fc } OR app_letsencrypt

backend k8s
  # Send X-Forwarded-For
  option forwardfor
  # TCP health check
  option tcp-check
  # Nodes
{% for worker in WORKER_IPS.split(';') %}
  server meshworker{{ loop.index }} {{ worker }}:{{ NODE_PORT }} check
{% endfor %}

backend be_letsencrypt
  log global
  mode http
  server srv_letsencrypt 127.0.0.1:63443

backend be_grafana
  log global
  mode http
  server srv_grafana 10.70.90.82:3000

backend be_mastodon
  log global
  mode http
  server srv_mastodon 10.70.90.60:443 ssl verify required ca-file /etc/haproxy/external_ssl/mastodon.pem

backend be_gsg-displays
  log global
  mode http
  server srv_gsg-displays 10.70.90.71:80

backend be_building
  log global
  mode http
{% for worker in WORKER_IPS.split(';') %}
  server buildingworker{{ loop.index }} {{ worker }}:{{ BUILDING_NODE_PORT }} check
{% endfor %}

backend be_airflow
  log global
  mode http
{% for worker in WORKER_IPS.split(';') %}
  server airflowworker{{ loop.index }} {{ worker }}:{{ AIRFLOW_NODE_PORT }} check
{% endfor %}

# DO NOT EXPOSE THIS TO THE WORLD
backend be_jenkins
  log global
  mode http
  server srv_jenkins 10.70.90.73:8080

# Expose metrics locally for DD
frontend prometheus
  bind 127.0.0.1:8405
  mode http
  http-request use-service prometheus-exporter
  no log
