
- name: Install deps
  ansible.builtin.apt:
    lock_timeout: 240
    update_cache: true
    pkg:
      - ca-certificates
      - python3-pip
      - python3.11-venv
      - cron
      - iptables-persistent
      - haproxy
      - openvswitch-switch-dpdk

- name: Add WN
  ansible.posix.authorized_key:
    user: debian
    state: present
    key: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINg7wq0d3JOKp9qmuaAlriDXoz3H4lt2LNJczOtBygsw wilnil@willardpad"

- name: Add AD
  ansible.posix.authorized_key:
    user: debian
    state: present
    key: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINqMvlwLFwGENT5WMjytI2iwVlHPV2TX+gOgBXj9kw4k andrew@localhost"

- name: Install certbot
  ansible.builtin.pip:
    name: certbot==2.11.0
    virtualenv: /root/certbot_venv
    virtualenv_command: python3 -m venv
    
- name: certbot script
  ansible.builtin.template:
    src: ../templates/certbot.sh.j2
    dest: /root/certbot.sh
    mode: "700"

- name: dummy0 interface
  ansible.builtin.template:
    src: ../templates/netplan_dummy0.yaml.j2
    dest: /etc/netplan/dummy0.yaml
    mode: "600"

- name: dummy1 interface
  ansible.builtin.template:
    src: ../templates/netplan_dummy1.yaml.j2
    dest: /etc/netplan/dummy1.yaml
    mode: "600"
  when: EXTERNAL_LISTEN_IPS | split(';') | length == 2

- name: eth0 interface
  ansible.builtin.template:
    src: ../templates/netplan_50_cloud_init.yaml.j2
    dest: /etc/netplan/50-cloud-init.yaml
    mode: "600"
  
- name: Install frr
  ansible.builtin.apt:
    update_cache: true
    pkg:
      - frr

- name: Enable ospfd
  ansible.builtin.lineinfile:
    path: /etc/frr/daemons
    search_string: ospfd=no
    line: "ospfd=yes"

- name: Config template frr
  ansible.builtin.template:
    src: ../templates/frr.conf.j2
    dest: /etc/frr/frr.conf

- name: Iptables rules
  ansible.builtin.template:
    src: ../templates/iptables.j2
    dest: /etc/iptables/rules.v4

- name: Restore iptables rules
  ansible.builtin.command:
    cmd: "bash -c '/sbin/iptables-restore < /etc/iptables/rules.v4'"

- name: Netplan apply
  ansible.builtin.command:
    cmd: "bash -c 'netplan apply && touch /tmp/netplan_applied'"
    creates: /tmp/netplan_applied

- name: Restart and enable iptables service
  ansible.builtin.service:
    name: netfilter-persistent
    state: restarted
    enabled: true

- name: Reload and enable frr service
  ansible.builtin.service:
    name: frr
    state: reloaded
    enabled: true

- name: net.ipv4.ip_forward
  ansible.posix.sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    sysctl_set: true
    state: present
    reload: true

- name: Create ssl certs directory if it does not exist
  ansible.builtin.file:
    path: /etc/haproxy/ssl
    state: directory
    mode: '0755'

- name: Check if file exists
  ansible.builtin.stat:
    path: "/etc/haproxy/ssl/lb.pem"
  register: lb_cert_file

- name: Config template haproxy
  ansible.builtin.template:
    src: ../templates/haproxy.cfg
    dest: /etc/haproxy/haproxy.cfg

- name: Temporarily disable ssl (no cert yet)
  ansible.builtin.lineinfile:
    path: /etc/haproxy/haproxy.cfg
    search_string: /etc/haproxy/ssl/
    line: "#no ssl yet"
  when: not lb_cert_file.stat.exists

- name: Restart and enable haproxy service
  ansible.builtin.service:
    name: haproxy
    state: restarted
    enabled: true
  when: not lb_cert_file.stat.exists

- name: Get cert
  ansible.builtin.shell:
    cmd: /root/certbot.sh

- name: Re-apply config template haproxy (because certs should exist)
  ansible.builtin.template:
    src: ../templates/haproxy.cfg
    dest: /etc/haproxy/haproxy.cfg
  when: not lb_cert_file.stat.exists

- name: Reload and enable haproxy service
  ansible.builtin.service:
    name: haproxy
    state: reloaded
    enabled: true

- name: Crontab
  ansible.builtin.lineinfile:
    path: /etc/cron.d/certbot_update_cert
    line: "2 1 * * 1   root    bash /root/certbot.sh 2>&1 > /dev/null"
    create: true

- name: Restart and enable cron service
  ansible.builtin.service:
    name: cron
    state: restarted
    enabled: true

- name: Datadog haproxy config
  ansible.builtin.copy:
    src: files/haproxy.d_conf.yaml
    dest: /etc/datadog-agent/conf.d/haproxy.d/conf.yaml
    owner: dd-agent
    group: dd-agent

- name: Reload datadog
  ansible.builtin.systemd_service:
    name: datadog-agent
    state: restarted
    enabled: true
